{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactprojects\\\\githubsearch\\\\githubsearch\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nconst Component = React.Component;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'simonswiss',\n      realName: '',\n      avatar: '',\n      location: '',\n      repos: '',\n      followers: '',\n      url: '',\n      notFound: ''\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, React.createElement(SearchBox, {\n      fetchUser: this.fetchUser.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }), React.createElement(Card, {\n      data: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  } // the api request function\n\n\n  fetchApi(url) {\n    fetch(url).then(res => res.json()).then(data => {\n      // update state with API data\n      this.setState({\n        username: data.login,\n        realName: data.name,\n        avatar: data.avatar_url,\n        location: data.location,\n        repos: data.public_repos,\n        followers: data.followers,\n        url: data.html_url,\n        notFound: data.message\n      });\n    }).catch(err => console.log('oh no!'));\n  }\n\n  fetchUser(username) {\n    let url = \"https://api.github.com/users/\".concat(username);\n    this.fetchApi(url);\n  }\n\n  componentDidMount() {\n    let url = \"https://api.github.com/users/\".concat(this.state.username);\n    this.fetchApi(url);\n  }\n\n}\n\nclass SearchBox extends Component {\n  render() {\n    return React.createElement(\"form\", {\n      className: \"searchbox\",\n      onSubmit: this.handleClick.bind(this),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      ref: ref => this.search = ReferenceError,\n      className: \"searchbox__input\",\n      type: \"text\",\n      placeholder: \"type username...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"searchbox__button\",\n      value: \"Search GitHub User\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }));\n  }\n\n  handleClick(e) {\n    e.preventDefault();\n    let username = this.ref.search.findDOMNode().value; // sending the username value to parent component to fetch new data from API\n\n    this.props.fetchUser(username);\n    this.ref.search.findDOMNode().value = '';\n  }\n\n}\n\nclass Card extends Component {\n  render() {\n    let data = this.props.data;\n\n    if (data.notFound === 'Not Found') {\n      // when username is not found...\n      return React.createElement(\"h3\", {\n        className: \"card__notfound\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"User not found. Try again!\");\n    } else {\n      // if username found, then...\n      return React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: data.url,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"card__avatar\",\n        src: data.avatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })), React.createElement(\"h2\", {\n        className: \"card__username\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"card__link\",\n        href: data.url,\n        target: \"_blank\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, data.username)), React.createElement(\"dl\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"dt\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Real name\"), React.createElement(\"dd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, data.realName), React.createElement(\"dt\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Location\"), React.createElement(\"dd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, data.location), React.createElement(\"dt\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Number of public repos\"), React.createElement(\"dd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, data.repos), React.createElement(\"dt\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Number of followers\"), React.createElement(\"dd\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, data.followers)));\n    }\n  }\n\n}\n/*React.render(<App />, document.getElementById('app'))*/\n\n\nexport default App;","map":{"version":3,"sources":["D:\\reactprojects\\githubsearch\\githubsearch\\src\\App.js"],"names":["React","Component","App","constructor","props","state","username","realName","avatar","location","repos","followers","url","notFound","render","fetchUser","bind","fetchApi","fetch","then","res","json","data","setState","login","name","avatar_url","public_repos","html_url","message","catch","err","console","log","componentDidMount","SearchBox","handleClick","ref","search","ReferenceError","e","preventDefault","findDOMNode","value","Card"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst Component = React.Component\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    \n    this.state = {\n      username: 'simonswiss',\n      realName: '',\n      avatar: '',\n      location: '',\n      repos: '',\n      followers: '',\n      url: '',\n      notFound: ''\n    }\n  }\n  render() {\n    return (\n      <div>\n        <SearchBox fetchUser={this.fetchUser.bind(this)}/>\n        <Card data={this.state} />\n      </div>\n    )\n  }\n  \n  // the api request function\n  fetchApi(url) { \n    \n    fetch(url)\n      .then((res) => res.json() )\n      .then((data) => {\n        \n        // update state with API data\n        this.setState({\n          username: data.login,\n          realName: data.name,\n          avatar: data.avatar_url,\n          location: data.location,\n          repos: data.public_repos,\n          followers: data.followers,\n          url: data.html_url,\n          notFound: data.message\n        })\n      })\n      .catch((err) => console.log('oh no!') )\n  }\n  \n  fetchUser(username) {\n    let url = `https://api.github.com/users/${username}`\n    this.fetchApi(url)\n  }\n  \n  componentDidMount() {\n    let url = `https://api.github.com/users/${this.state.username}`\n    this.fetchApi(url)\n  }\n}\n\nclass SearchBox extends Component {\n  render() {\n    return (\n      <form \n        className=\"searchbox\" \n        onSubmit={this.handleClick.bind(this)}>\n        <input\n          ref= {(ref) => this.search = ReferenceError}\n          className=\"searchbox__input\" \n          type=\"text\" \n          placeholder=\"type username...\"/>\n        \n        <input\n          type=\"submit\"\n          className=\"searchbox__button\"\n          value=\"Search GitHub User\" />\n      </form>\n    )\n  }\n  \n   handleClick(e) {\n    e.preventDefault()\n    let username = this.ref.search.findDOMNode().value\n    // sending the username value to parent component to fetch new data from API\n    this.props.fetchUser(username)\n    this.ref.search.findDOMNode().value = ''\n  }\n}\n\nclass Card extends Component {\n  render() {\n    let data = this.props.data\n    \n    if (data.notFound === 'Not Found') {\n      // when username is not found...\n      return <h3 className=\"card__notfound\">User not found. Try again!</h3>\n    } else {\n      // if username found, then...\n      return (\n        <div className=\"card\">\n          <a href={data.url} target=\"_blank\">\n            <img className=\"card__avatar\" src={data.avatar} />             \n          </a>\n          <h2 className=\"card__username\">\n            <a className=\"card__link\" href={data.url} target=\"_blank\">{data.username}</a></h2>\n          <dl>\n            <dt>Real name</dt>\n            <dd>{data.realName}</dd>\n\n            <dt>Location</dt>\n            <dd>{data.location}</dd>\n\n            <dt>Number of public repos</dt>\n            <dd>{data.repos}</dd>\n\n            <dt>Number of followers</dt>\n            <dd>{data.followers}</dd>\n          </dl>\n        </div>\n      )\n    }\n  }\n}\n\n/*React.render(<App />, document.getElementById('app'))*/\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}